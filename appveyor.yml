environment:
  global:
    PROJECT_NAME: nssm_exec
  matrix:
    # Stable channel
    - TARGET: i686-pc-windows-gnu
      CHANNEL: stable
    - TARGET: i686-pc-windows-msvc
      CHANNEL: stable
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: stable
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: stable
    # Beta channel
    - TARGET: i686-pc-windows-gnu
      CHANNEL: beta
    - TARGET: i686-pc-windows-msvc
      CHANNEL: beta
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: beta
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: beta
    # Nightly channel
    - TARGET: i686-pc-windows-gnu
      CHANNEL: nightly
    - TARGET: i686-pc-windows-msvc
      CHANNEL: nightly
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: nightly
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: nightly

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - curl -sSf -o rustup-init.exe https://win.rustup.rs
  - rustup-init.exe --default-host %TARGET% --default-toolchain %CHANNEL% -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
  # Based on https://www.appveyor.com/docs/build-environment/#mingw-msys-cygwin
  - if "%TARGET%"=="i686-pc-windows-gnu" set PATH=%PATH%;C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\bin
  - if "%TARGET%"=="x86_64-pc-windows-gnu" set PATH=%PATH%;C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\bin
  - gcc --version
  - echo %PATH%

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
# source: https://github.com/starkat99/appveyor-rust/blob/master/appveyor.yml#L113
build: false

test_script:
  # debug
  - cargo build --verbose
  - cargo run
  # release
  - cargo build --release --verbose
  - cargo run --release

branches:
  only:
    - master